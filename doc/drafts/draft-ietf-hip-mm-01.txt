
Network Working Group                                        P. Nikander
Internet-Draft                                                  J. Arkko
Expires: August 21, 2005                   Ericsson Research Nomadic Lab
                                                            T. Henderson
                                                      The Boeing Company
                                                       February 20, 2005


   End-Host Mobility and Multi-Homing with the Host Identity Protocol
                          draft-ietf-hip-mm-01

Status of this Memo

   This document is an Internet-Draft and is subject to all provisions
   of section 3 of RFC 3667.  By submitting this Internet-Draft, each
   author represents that any applicable patent or other IPR claims of
   which he or she is aware have been or will be disclosed, and any of
   which he or she become aware will be disclosed, in accordance with
   RFC 3668.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as
   Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on August 21, 2005.

Copyright Notice

   Copyright (C) The Internet Society (2005).

Abstract

   This document defines a "locator" parameter for the Host Identity
   Protocol and specifies an end-host mobility mechanism.






Nikander, et al.        Expires August 21, 2005                 [Page 1]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


Table of Contents

   1.  Introduction and Scope . . . . . . . . . . . . . . . . . . . .  3
   2.  Conventions used in this document  . . . . . . . . . . . . . .  5
   3.  Terminology  . . . . . . . . . . . . . . . . . . . . . . . . .  6
   4.  LOCATOR parameter format . . . . . . . . . . . . . . . . . . .  7
     4.1   Traffic Type and Preferred Locator . . . . . . . . . . . .  8
     4.2   Locator Type and Locator . . . . . . . . . . . . . . . . .  8
     4.3   UPDATE packet with included LOCATOR  . . . . . . . . . . .  9
   5.  Overview of HIP basic mobility and multi-homing
       functionality  . . . . . . . . . . . . . . . . . . . . . . . . 10
     5.1   Informing the peer about multiple or changed locator(s)  . 10
     5.2   Address verification . . . . . . . . . . . . . . . . . . . 13
     5.3   Preferred locator  . . . . . . . . . . . . . . . . . . . . 13
     5.4   Locator data structure and status  . . . . . . . . . . . . 14
   6.  Protocol overview  . . . . . . . . . . . . . . . . . . . . . . 15
     6.1   Mobility with single SA pair . . . . . . . . . . . . . . . 15
     6.2   Host multihoming . . . . . . . . . . . . . . . . . . . . . 17
     6.3   Site multi-homing  . . . . . . . . . . . . . . . . . . . . 19
     6.4   Dual host multi-homing . . . . . . . . . . . . . . . . . . 19
     6.5   Combined mobility and multi-homing . . . . . . . . . . . . 20
     6.6   Using LOCATORs across addressing realms  . . . . . . . . . 20
     6.7   Network renumbering  . . . . . . . . . . . . . . . . . . . 20
     6.8   Initiating the protocol in R1 or I2  . . . . . . . . . . . 20
   7.  Processing rules . . . . . . . . . . . . . . . . . . . . . . . 22
     7.1   Sending LOCATORs . . . . . . . . . . . . . . . . . . . . . 22
     7.2   Handling received LOCATORs . . . . . . . . . . . . . . . . 23
     7.3   Verifying address reachability . . . . . . . . . . . . . . 24
     7.4   Changing the preferred locator . . . . . . . . . . . . . . 24
   8.  Policy considerations  . . . . . . . . . . . . . . . . . . . . 26
   9.  Security Considerations  . . . . . . . . . . . . . . . . . . . 27
   10.   IANA Considerations  . . . . . . . . . . . . . . . . . . . . 28
   11.   Acknowledgments  . . . . . . . . . . . . . . . . . . . . . . 29
   12.   References . . . . . . . . . . . . . . . . . . . . . . . . . 30
   12.1  Normative references . . . . . . . . . . . . . . . . . . . . 30
   12.2  Informative references . . . . . . . . . . . . . . . . . . . 30
       Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . 30
   A.  Changes from previous versions . . . . . . . . . . . . . . . . 32
     A.1   From nikander-hip-mm-00 to nikander-hip-mm-01  . . . . . . 32
     A.2   From nikander-hip-mm-01 to nikander-hip-mm-02  . . . . . . 32
     A.3   From -02 to draft-ietf-hip-mm-00 . . . . . . . . . . . . . 32
     A.4   From draft-ietf-hip-mm-00 to -01 . . . . . . . . . . . . . 33
       Intellectual Property and Copyright Statements . . . . . . . . 34








Nikander, et al.        Expires August 21, 2005                 [Page 2]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


1.  Introduction and Scope

   The Host Identity Protocol [1] (HIP) defines a mechanism that
   decouples the transport layer (TCP, UDP, etc) from the
   internetworking layer (IPv4 and IPv6).  When a host uses HIP, the
   overlying protocol sublayers (e.g., transport layer sockets and ESP
   Security Associations) are not bound to IP addresses but instead to
   Host Identifiers.  However, the hosts must also know at least one IP
   address where their peers are reachable.  Initially these IP
   addresses are the ones used during the HIP base exchange.

   This document defines a generalization of an address called a
   "locator".  A locator specifies a point-of-attachment to the network
   but may also include additional end-to-end tunneling or per-host
   demultiplexing context that affects how packets are handled below the
   logical HIP sublayer.  This generalization is useful because IP
   addresses alone may not be sufficient to describe how packets should
   be handled below HIP.  For example, in a host multihoming context,
   certain IP addresses may need to be associated with certain ESP SPIs,
   to avoid violation of the ESP anti-replay window [2].  Addresses may
   also be affiliated with transport ports in certain tunneling
   scenarios.  Or locators may merely be traditional network addresses.

   Using the locator concept, this document specifies extensions to HIP
   to allow a mobile host to directly inform a correspondent host, with
   whom the host has an active HIP association, of a locator change.
   The extensions consist of a new LOCATOR parameter for use in HIP
   messages, packet processing procedures for using HIP messages to
   securely notify the peer of a locator change, and additional
   procedures such as an address check mechanism.

   When using ESP, since the SAs are not bound to IP addresses, the host
   is able to receive packets that are protected using a HIP created ESP
   SA from any address.  Thus, a host can change its IP address and
   continue to send packets to its peers.  However, unless the host is
   sufficiently trusted by its peers, the peers are not able to reply
   before they can reliably and securely update the set of addresses
   that they associate with the sending host.  Furthermore, mobility may
   change the path characteristics in such a manner that reordering
   occurs and packets fall outside the ESP anti-replay window.

   A related operational configuration is host multihoming, in which a
   host has multiple locators simultaneously rather than sequentially as
   in the case of mobility.  By using the locator parameter defined
   herein, a host can inform its peers of additional (multiple) locators
   at which it can be reached, and can declare a particular locator as a
   "preferred" locator.  Although this document defines a mechanism for
   multihoming, it does not define associated policies such as which



Nikander, et al.        Expires August 21, 2005                 [Page 3]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


   locators to choose when more than one pair is available, the
   operation of simultaneous mobility and multihoming, and the
   implications of multihoming on transport protocols and ESP
   anti-replay windows.  Additional definition of HIP-based multihoming
   is expected to be part of a future document.

   Due to the danger of flooding attacks (see [3]), the peers must
   always check the reachability of the host at a new IP address, unless
   a sufficient level of trust exists between the hosts.  The
   reachability check is implemented by the challenger sending some
   piece of unguessable information to the new address, and waiting for
   some acknowledgment from the responder that indicates reception of
   the information at the new address.  This may include exchange of a
   nonce, or generation of a new SPI and observing data arriving on the
   new SPI.

   There are a number of situations where the simple end-to-end
   readdressing functionality is not sufficient.  These include the
   initial reachability of a mobile host, location privacy, end-host and
   site multi-homing with legacy hosts, and NAT traversal.  In these
   situations there is a need for some helper functionality in the
   network.  Such functionality is out of scope of this document.
   Finally, making underlying IP mobility transparent to the transport
   layer has implications on the proper response of transport congestion
   control, path MTU selection, and QoS.  Transport-layer mobility
   triggers, and the proper transport response to a HIP mobility or
   multi-homing address change, are outside the scope of this document.
























Nikander, et al.        Expires August 21, 2005                 [Page 4]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


2.  Conventions used in this document

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC2119 [4].














































Nikander, et al.        Expires August 21, 2005                 [Page 5]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


3.  Terminology

   Locator.  A name that controls how the packet is routed through the
      network and demultiplexed by the end host.  It may include a
      concatenation of traditional network addresses such as an IPv6
      address and end-to-end identifiers such as an ESP SPI.  It may
      also include transport port numbers or IPv6 Flow Labels as
      demultiplexing context, or it may simply be a network address.
   Address.  A name that denotes a point-of-attachment to the network.
      The two most common examples are an IPv4 address and an IPv6
      address.  The set of possible addresses is a subset of the set of
      possible locators.
   Preferred locator.  A locator on which a host prefers to receive
      data.  With respect to a given peer, a host always has one active
      preferred locator, unless there are no active locators.  By
      default, the locators used in the HIP base exchange are the
      preferred locators.
   New preferred locator.  A new preferred locator sent by a host to its
      peers.  The reachability of the new preferred locator often needs
      to be verified before it can be put into use.  Consequently, there
      may simultaneously be an active preferred locator, being used, and
      a new preferred locator, the reachability of which is being
      verified.




























Nikander, et al.        Expires August 21, 2005                 [Page 6]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


4.  LOCATOR parameter format

   The LOCATOR parameter is a critical parameter as defined by [1].  The
   LOCATOR parameter is also abbreviated as "LOC" in the figures herein.
   It consists of the standard HIP parameter Type and Length fields,
   plus one or more locator sub-parameters.  Each Locator sub-parameter
   contains a Traffic Type, Locator Type, Locator Length, Preferred
   Locator bit, Locator Lifetime, and a Locator encoding.

        0                   1                   2                   3
        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |             Type              |            Length             |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       | Traffic Type   | Locator Type | Locator Length | Reserved   |P|
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |                       Locator Lifetime                        |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |                            Locator                            |
       |                                                               |
       |                                                               |
       |                                                               |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       .                                                               .
       .                                                               .
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       | Traffic Type   | Locator Type | Locator Length | Reserved   |P|
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |                       Locator Lifetime                        |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |                            Locator                            |
       |                                                               |
       |                                                               |
       |                                                               |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


   Type: 3
   Length: Length in octets, excluding Type and Length fields, and
      excluding padding.
   Traffic Type: Defines whether the locator pertains to HIP signaling,
      user data, or both.
   Locator Type: Defines the semantics of the Locator field.
   Locator Length: Defines the length of the Locator field, in units of
      4-byte words (Locators up to a maximum of 4*255 bytes are
      supported).





Nikander, et al.        Expires August 21, 2005                 [Page 7]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


   Reserved: Zero when sent, ignored when received.
   P: Preferred locator.  Set to one if the locator is preferred for
      that Traffic Type; otherwise set to zero.
   Locator Lifetime: Locator lifetime, in seconds.
   Locator: The locator whose semantics and encoding are indicated by
      the Locator Type field.  All Locator sub-fields are integral
      multiples of four bytes in length.

   The Locator Lifetime indicates how long the following locator is
   expected to be valid.  The lifetime is expressed in seconds.  Each
   locator MUST have a non-zero lifetime.  The address is expected to
   become deprecated when the specified number of seconds has passed
   since the reception of the message.  A deprecated address SHOULD NOT
   be used as an destination address if an alternate (non-deprecated) is
   available and has sufficient scope.

4.1  Traffic Type and Preferred Locator

   The following Traffic Type values are defined:

   0:  Both signaling (HIP control packets) and user data.
   1:  Signaling packets only.
   2:  Data packets only.

   The "P" bit, when set, has scope over the corresponding Traffic Type
   that precedes it.  That is, if a "P" bit is set for Traffic Type "2",
   for example, that means that the locator is preferred for data
   packets.  If there is a conflict (for example, if P bit is set for
   both "0" and "2"), the more specific Traffic Type rule applies.  By
   default, the IP addresses used in the base exchange are preferred
   locators for both signaling and user data, unless a new preferred
   locator supersedes them.  If no locators are indicated as preferred
   for a given Traffic Type, the implementation may use an arbitrary
   locator from the set of active locators.

4.2  Locator Type and Locator

   The following Locator Type values are defined, along with the
   associated semantics of the Locator field:

   0:  An IPv6 address or an IPv4-in-IPv6 format IPv4 address [5] (128
      bits long).
   1:  The concatenation of an ESP SPI (first 32 bits) followed by an
      IPv6 address or an IPv4-in-IPv6 format IPv4 address (an additional
      128 bits).






Nikander, et al.        Expires August 21, 2005                 [Page 8]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


4.3  UPDATE packet with included LOCATOR

   A number of combinations of parameters in an UPDATE packet are
   possible (e.g., see Section 6).  Any UPDATE packet that includes a
   LOCATOR parameter SHOULD include both an HMAC and a HIP_SIGNATURE
   parameter.>













































Nikander, et al.        Expires August 21, 2005                 [Page 9]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


5.  Overview of HIP basic mobility and multi-homing functionality

   HIP mobility and multi-homing is fundamentally based on the HIP
   architecture [3], where the transport and internetworking layers are
   decoupled from each other by an interposed host identity protocol
   layer.  In the HIP architecture, the transport layer sockets are
   bound to the Host Identifiers (through HIT or LSI in the case of
   legacy APIs), and the Host Identifiers are translated to the actual
   IP address.

   The HIP base protocol specification [1] is expected to be commonly
   used with the ESP Transport Format [6] to establish a pair of
   Security Associations (SA).  The ESP SAs are then used to carry the
   actual payload data between the two hosts, by wrapping TCP, UDP, and
   other upper layer packets into transport mode ESP payloads.  The IP
   header uses the actual IP addresses in the network.

   Although HIP may also be specified in the future to operate with an
   alternative to ESP providing the per-packet HIP context, the
   remainder of this document assumes that HIP is being used in
   conjunction with ESP.  Future documents may extend this document to
   include other behaviors when ESP is not used.

   The base specification does not contain any mechanisms for changing
   the IP addresses that were used during the base HIP exchange.  Hence,
   in order to remain connected, any systems that implement only the
   base specification and nothing else must retain the ability to
   receive packets at their primary IP address; that is, those systems
   cannot change the IP address on which they are using to receive
   packets without causing loss of connectivity until a base exchange is
   performed from the new address.

5.1  Informing the peer about multiple or changed locator(s)

   This document specifies a new HIP protocol parameter, the LOCATOR
   parameter (see Section 4), that allows the hosts to exchange
   information about their locator(s), and any changes in their
   locator(s).  The logical structure created with LOCATOR parameters
   has three levels: hosts, Security Associations (SAs) indexed by
   Security Parameter Indices (SPIs), and addresses.

   The relation between these entities for an association negotiated as
   defined in the base specification [1] and ESP transform [6] is
   illustrated in Figure 2.







Nikander, et al.        Expires August 21, 2005                [Page 10]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


              -<- SPI1a --                         -- SPI2a ->-
      host1 <              > addr1a <---> addr2a <              > host2
              ->- SPI2a --                         -- SPI1a -<-

      Figure 2: Relation between hosts, SPIs, and addresses (base
                             specification)

   In Figure 2, host1 and host2 negotiate two unidirectional SAs, and
   each host selects the SPI value for its inbound SA.  The addresses
   addr1a and addr2a are the source addresses that each host uses in the
   base HIP exchange.  These are the "preferred" (and only) addresses
   conveyed to the peer for each SA; even though packets sent to any of
   the hosts' interfaces can arrive on an inbound SPI, when a host sends
   packets to the peer on an outbound SPI, it knows of a single
   destination address associated with that outbound SPI (for host1, it
   sends a packet on SPI2a to addr2a to reach host2), unless other
   mechanisms exist to learn of new addresses.

   In general, the bindings that exist in an implementation
   corresponding to this draft can be depicted as shown in Figure 3.  In
   this figure, a host can have multiple inbound SPIs (and, not shown,
   multiple outbound SPIs) between itself and another host.
   Furthermore, each SPI may have multiple addresses associated with it.
   These addresses bound to an SPI are not used as SA selectors.
   Rather, the addresses are those addresses that are provided to the
   peer host, as hints for which addresses to use to reach the host on
   that SPI.  The LOCATOR parameter allows for IP addresses and SPIs to
   be combined to form generalized locators.  The LOCATOR parameter is
   used to change the set of addresses that a peer associates with a
   particular SPI.

                            address11
                          /
                   SPI1   - address12
                 /
                /           address21
           host -- SPI2   <
                \           address22
                 \
                   SPI3   - address31
                          \
                            address32

  Figure 3: Relation between hosts, SPIs, and addresses (general case)

   A host may establish any number of security associations (or SPIs)
   with a peer.  The main purpose of having multiple SPIs is to group
   the addresses into collections that are likely to experience fate



Nikander, et al.        Expires August 21, 2005                [Page 11]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


   sharing.  For example, if the host needs to change its addresses on
   SPI2, it is likely that both address21 and address22 will
   simultaneously become obsolete.  In a typical case, such SPIs may
   correspond with physical interfaces; see below.  Note, however, that
   especially in the case of site multi-homing, one of the addresses may
   become unreachable while the other one still works.  In the typical
   case, however, this does not require the host to inform its peers
   about the situation, since even the non-working address still
   logically exists.

   A basic property of HIP SAs is that the inbound IP address is not
   used as a selector for the SA.  Therefore, in Figure 3, it may seem
   unnecessary for address31, for example, to be associated only with
   SPI3-- in practice, a packet may arrive to SPI1 via destination
   address address31 as well.  However, the use of different source and
   destination addresses typically leads to different paths, with
   different latencies in the network, and if packets were to arrive via
   an arbitrary destination IP address (or path) for a given SPI, the
   reordering due to different latencies may cause some packets to fall
   outside of the ESP anti-replay window.  For this reason, HIP provides
   a mechanism to affiliate destination addresses with inbound SPIs, if
   there is a concern that anti-replay windows might be violated
   otherwise.  In this sense, we can say that a given inbound SPI has an
   "affinity" for certain inbound IP addresses, and this affinity is
   communicated to the peer host.  Each physical interface SHOULD have a
   separate SA, unless the ESP anti-replay window is loose.

   Moreover, even if the destination addresses used for a particular SPI
   are held constant, the use of different source interfaces may also
   cause packets to fall outside of the ESP anti-replay window, since
   the path traversed is often affected by the source address or
   interface used.  A host has no way to influence the source interface
   on which a peer uses to send its packets on a given SPI.  Hosts
   SHOULD consistently use the same source interface when sending to a
   particular destination IP address and SPI.  For this reason, a host
   may find it useful to change its SPI or at least reset its ESP
   anti-replay window when the peer host readdresses.

   An address may appear on more than one SPI.  This creates no
   ambiguity since the receiver will ignore the IP addresses as SA
   selectors anyway.

   A single LOCATOR parameter contains data only about one SPI.  To
   simultaneously signal changes on several SPIs, it is necessary to
   send several LOCATOR parameters.  The packet structure supports this.

   If the LOCATOR parameter is sent in an UPDATE packet, then the
   receiver will respond with an UPDATE acknowledgment.  If the LOCATOR



Nikander, et al.        Expires August 21, 2005                [Page 12]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


   parameter is sent in a NOTIFY, I2, or R2 packet, then the recipient
   may consider the LOCATOR as informational, and act only when it needs
   to activate a new address.  The use of LOCATOR in a NOTIFY message
   may not be compatible with middleboxes.

5.2  Address verification

   When a HIP host receives a set of locators from another HIP host in a
   LOCATOR, it does not necessarily know whether the other host is
   actually reachable at the claimed addresses.  In fact, a malicious
   peer host may be intentionally giving bogus addresses in order to
   cause a packet flood towards the given addresses [9].  Thus, before
   the HIP host can actually use a new address, it must first check that
   the peer is reachable at the new address.

   A second benefit of performing an address check is to allow any
   possible middleboxes in the network along the new path to obtain the
   peer host's inbound SPI.

   A simple technique to verify addresses is to send an UPDATE to the
   host at the new address.  The UPDATE packet SHOULD include a nonce,
   unguessable by anyone not on the path to the new address, that forces
   the host to reply in a manner that confirms reception of the nonce.
   One direct way to perform this is to include an ECHO_REQUEST
   parameter with some piece of unguessable information such as a random
   number.  If the host is sending a NES parameter, the ECHO_REQUEST MAY
   contain the new SPI, for example.  If the peer host is rekeying by
   sending an UPDATE with NES to the new address, the arrival of data on
   the new SPI can also be used to verify the address.

   If middlebox traversal is possible along the path, and the peer host
   is not rekeying, the peer host SHOULD include a SPI parameter as part
   of its UPDATE, with the SPI corresponding to its active inbound SPI.
   It is not specified how a host knows whether or not middleboxes might
   lie on its path, so a conservative assumption may be to always
   include the SPI parameter.

   In certain networking scenarios, hosts may be trusted enough to
   bypass performing address verification.  In such a case, the host MAY
   bypass the address verification step and put the addresses into
   immediate service.  Note that this may not be compatible with
   middlebox traversal.

5.3  Preferred locator

   When a host has multiple locators, the peer host must decide upon
   which to use for outbound packets.  It may be that a host would
   prefer to receive data on a particular inbound interface.  HIP allows



Nikander, et al.        Expires August 21, 2005                [Page 13]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


   a particular locator to be designated as a preferred locator, and
   communicated to the peer (see Section 4).

   In general, when multiple locators are used for a session, there is
   the question of using multiple locators for failover only or for
   load-balancing.  Due to the implications of load-balancing on the
   transport layer that still need to be worked out, this draft assumes
   that multiple locators are used primarily for failover.  An
   implementation may use ICMP interactions, reachability checks, or
   other means to detect the failure of a locator.

5.4  Locator data structure and status

   In a typical implementation, each outgoing locator is represented as
   a piece of state that contains the following data:
      the actual bit pattern representing the locator,
      lifetime (seconds),
      status (UNVERIFIED, ACTIVE, DEPRECATED).
   The status is used to track the reachability of the address embedded
   within the LOCATOR parameter:
   UNVERIFIED indicates that the reachability of the address has not
      been verified yet,
   ACTIVE indicates that the reachability of the address has been
      verified and the address has not been deprecated,
   DEPRECATED indicates that the locator lifetime has expired

   The following state changes are allowed:
   UNVERIFIED to ACTIVE The reachability procedure completes
      successfully.
   UNVERIFIED to DEPRECATED The locator lifetime expires while it is
      UNVERIFIED.
   ACTIVE to DEPRECATED The locator lifetime expires while it is ACTIVE.
   ACTIVE to UNVERIFIED There has been no traffic on the address for
      some time, and the local policy mandates that the address
      reachability must be verified again before starting to use it
      again.
   DEPRECATED to UNVERIFIED The host receives a new lifetime for the
      locator.
   If a host is verifying reachability with another host, a DEPRECATED
   address MUST NOT be changed to ACTIVE without first verifying its
   reachability.  If reachability is not being verified, then the
   UNVERIFIED state is a transient state that transitions immediately to
   ACTIVE.








Nikander, et al.        Expires August 21, 2005                [Page 14]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


6.  Protocol overview

   In this section we briefly introduce a number of usage scenarios
   where the HIP mobility and multi-homing facility is useful.  These
   scenarios assume that HIP is being used with the ESP Transform,
   although other scenarios may be defined in the future.  To understand
   these usage scenarios, the reader should be at least minimally
   familiar with the HIP protocol specification [1].  However, for the
   (relatively) uninitiated reader it is most important to keep in mind
   that in HIP the actual payload traffic is protected with ESP, and
   that the ESP SPI acts as an index to the right host-to-host context.

   Each of the scenarios below assumes that the HIP base exchange has
   completed, and the hosts each have a single outbound SA to the peer
   host.  Associated with this outbound SA is a single destination
   address of the peer host-- the source address used by the peer during
   the base exchange.

   The readdressing protocol is an asymmetric protocol where one host,
   called the mobile host, informs another host, called the peer host,
   about changes of IP addresses on affected SPIs.  The readdressing
   exchange is designed to be piggybacked on a number of existing HIP
   exchanges.  The main packets on which the LOCATOR parameters are
   expected to be carried on are UPDATE packets.  However, some
   implementations may want to experiment with sending LOCATOR
   parameters also on other packets, such as R1, I2, and NOTIFY.

6.1  Mobility with single SA pair

   A mobile host must sometimes change an IP address bound to an
   interface.  The change of an IP address might be needed due to a
   change in the advertised IPv6 prefixes on the link, a reconnected PPP
   link, a new DHCP lease, or an actual movement to another subnet.  In
   order to maintain its communication context, the host must inform its
   peers about the new IP address.  This first example considers the
   case in which the mobile host has only one interface, IP address, and
   a single pair of SAs (one inbound, one outbound).

   1.  The mobile host is disconnected from the peer host for a brief
       period of time while it switches from one IP address to another.
       Upon obtaining a new IP address, the mobile host sends a LOCATOR
       parameter to the peer host in an UPDATE message.  The LOCATOR
       indicates the new IP address and the SPI associated with the new
       IP address by using a Locator Type of "1", the locator lifetime,
       and whether the new locator is a preferred locator.  The mobile
       host may optionally send a NES to create a new inbound SA, in
       which case it transitions to state REKEYING.  In this case, the
       Locator contains the new SPI to use.  Otherwise, the existing SPI



Nikander, et al.        Expires August 21, 2005                [Page 15]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


       is identified in the Locator parameter, and the host waits for
       its UPDATE to be acknowledged.
   2.  Depending on whether the mobile host initiated a rekey, and on
       whether the peer host itself wants to rekey or verify the mobile
       host's new address, a number of responses are possible.  Figure 4
       illustrates an exchange for which neither side initiates a
       rekeying, but for which the peer host performs an address check.
       If the peer host chooses not to perform an address check, the
       UPDATE that it sends will only acknowledge the mobile host's
       update but will not solicit a response from the mobile host.  If
       the mobile host is rekeying, the peer will also rekey, as shown
       in Figure 5.  If the mobile host did not decide to rekey but the
       peer desires to do so, then it initiates a rekey as illustrated
       in Figure 6.  The UPDATE messages sent from the peer back to the
       mobile are sent to the newly advertised address.
   3.  If the peer host is verifying the new address, the address is
       marked as UNVERIFIED in the interim.  Once it has successfully
       received a reply to its UPDATE challenge, or optionally, data on
       the new SA, it marks the new address as ACTIVE and removes the
       old address.

     Mobile Host                         Peer Host

                UPDATE(LOC, SEQ)
        ----------------------------------->
                UPDATE(SPI, SEQ, ACK, ECHO_REQUEST)
        <-----------------------------------
                UPDATE(ACK, ECHO_RESPONSE)
        ----------------------------------->

      Figure 4: Readdress without rekeying, but with address check


     Mobile Host                         Peer Host

                UPDATE(LOC, NES, SEQ, [DIFFIE_HELLMAN])
        ----------------------------------->
                UPDATE(NES, SEQ, ACK, [DIFFIE_HELLMAN,] ECHO_REQUEST)
        <-----------------------------------
                UPDATE(ACK, ECHO_RESPONSE)
        ----------------------------------->

            Figure 5: Readdress with mobile-initiated rekey








Nikander, et al.        Expires August 21, 2005                [Page 16]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


     Mobile Host                         Peer Host

                UPDATE(LOC, SEQ)
        ----------------------------------->
                UPDATE(NES, SEQ, ACK, [DIFFIE_HELLMAN], ECHO_REQUEST)
        <-----------------------------------
                UPDATE(NES, SEQ, ACK, [DIFFIE_HELLMAN,] ECHO_RESPONSE)
        ----------------------------------->
                UPDATE(ACK)
        <-----------------------------------

             Figure 6: Readdress with peer-initiated rekey

   Hosts that use link-local addresses as source addresses in their HIP
   handshakes may not be reachable by a mobile peer.  Such hosts SHOULD
   provide a globally routable address either in the initial handshake
   or via the LOCATOR parameter.

6.2  Host multihoming

   A (mobile or stationary) host may sometimes have more than one
   interface.  The host may notify the peer host of the additional
   interface(s) by using the LOCATOR parameter.  To avoid problems with
   the ESP anti-replay window, a host SHOULD use a different SA for each
   interface used to receive packets from the peer host.

   When more than one locator is provided to the peer host, the host
   SHOULD indicate which locator is preferred.  By default, the
   addresses used in the base exchange are preferred until indicated
   otherwise.

   Although the protocol may allow for configurations in which there is
   an asymmetric number of SAs between the hosts (e.g., one host has two
   interfaces and two inbound SAs, while the peer has one interface and
   one inbound SA), it is RECOMMENDED that inbound and outbound SAs be
   created pairwise between hosts.  When a NES arrives to rekey a
   particular outbound SA, the corresponding inbound SA should be also
   rekeyed at that time.  Although asymmetric SA configurations might be
   experimented with, their usage may constrain interoperability at this
   time.  However, it is recommended that implementations attempt to
   support peers that prefer to use non-paired SAs.  It is expected that
   this section and behavior will be modified in future revisions of
   this protocol, once the issue and its implications are better
   understood.

   To add both an additional interface and SA, the host sends a LOCATOR
   with a NES.  The host uses the same (new) SPI value in the LOCATOR
   and both the "Old SPI" and "New SPI" values in the NES-- this



Nikander, et al.        Expires August 21, 2005                [Page 17]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


   indicates to the peer that the SPI is not replacing an existing SPI.
   The multihomed host transitions to state REKEYING, waiting for a NES
   from the peer and an ACK of its own UPDATE.  As in the mobility case,
   the peer host can perform an address check while it is rekeying.
   Figure 7 illustrates the basic packet exchange.

     Multi-homed Host                    Peer Host

                UPDATE(LOC, NES, SEQ, [DIFFIE_HELLMAN])
        ----------------------------------->
                UPDATE(NES, SEQ, ACK, [DIFFIE_HELLMAN,] ECHO_REQUEST)
        <-----------------------------------
                UPDATE(ACK, ECHO_RESPONSE)
        ----------------------------------->

                  Figure 7: Basic multihoming scenario

   For the case in which multiple locators are advertised in a LOCATOR,
   the peer does not need to send ACK for the UPDATE(LOCATOR) in every
   subsequent message used for the address check procedure of the
   multiple locators.  Therefore, a sample packet exchange might look as
   shown in Figure 8.

     Multi-homed Host                    Peer Host

                UPDATE(LOC(addr_1,addr_2), SEQ)
        ----------------------------------->
                UPDATE(ACK)
        <-----------------------------------

        sent to addr_1:UPDATE(SPI, SEQ, ECHO_REQUEST)
        <-----------------------------------
                UPDATE(ACK, ECHO_RESPONSE)
        ----------------------------------->

        sent to addr_2:UPDATE(SPI, SEQ, ECHO_REQUEST)
        <-----------------------------------
                UPDATE(ACK, ECHO_RESPONSE)
        ----------------------------------->

               Figure 8: LOCATOR with multiple addresses

   When processing inbound LOCATORs that establish new security
   associations, a host uses the destination address of the UPDATE
   containing LOCATOR as the local address to which the LOC plus NES is
   targeted.  Hosts may send LOCATOR with the same IP address to
   different peer addresses-- this has the effect of creating multiple
   inbound SAs implicitly affiliated with different source addresses.



Nikander, et al.        Expires August 21, 2005                [Page 18]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


   When rekeying in a multihoming situation in which there is an
   asymmetric number of SAs between two hosts, a respondent to the NES/
   UPDATE procedure may have some ambiguity as to which inbound SA it
   should update in response to the peer's UPDATE.  In such a case, the
   host SHOULD choose an SA corresponding to the inbound interface on
   which the UPDATE was received.

6.3  Site multi-homing

   A host may have an interface that has multiple globally reachable IP
   addresses.  Such a situation may be a result of the site having
   multiple upper Internet Service Providers, or just because the site
   provides all hosts with both IPv4 and IPv6 addresses.  It is
   desirable that the host can stay reachable with all or any subset of
   the currently available globally routable addresses, independent on
   how they are provided.

   This case is handled the same as if there were different IP
   addresses, described above in Section 6.2.  Note that a single
   interface may experience site multi-homing while the host itself may
   have multiple interfaces.

   Note that a host may be multi-homed and mobile simultaneously, and
   that a multi-homed host may want to protect the location of some of
   its interfaces while revealing the real IP address of some others.

   This document does not presently specify additional site multihoming
   extensions to HIP to further align it with the requirements of the
   multi6 working group.

6.4  Dual host multi-homing

   Consider the case in which both hosts would like to add an additional
   address after the base exchange completes.  In Figure 9, consider
   that host1 wants to add address addr1b.  It would send a LOCATOR to
   host2 located at addr2a, and a new set of SPIs would be added between
   hosts 1 and 2 (call them SPI1b and SPI2b).  Next, consider host2
   deciding to add addr2b to the relationship.  host2 now has a choice
   of which of host1's addresses to initiate LOCATOR to.  It may choose
   to initiate a LOCATOR to addr1a, addr1b, or both.  If it chooses to
   send to both, then a full mesh (four SA pairs) of SAs would exist
   between the two hosts.  This is the most general case; it may be
   often the case that hosts primarily establish new SAs only with the
   peer's preferred locator.  The readdressing protocol is flexible
   enough to accommodate this choice.






Nikander, et al.        Expires August 21, 2005                [Page 19]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


              -<- SPI1a --                         -- SPI2a ->-
      host1 <              > addr1a <---> addr2a <              > host2
              ->- SPI2a --                         -- SPI1a -<-

                             addr1b <---> addr2b

   Figure 9: Dual multihoming case in which each host uses LOCATOR to
                          add a second address


6.5  Combined mobility and multi-homing

   It looks likely that in the future many mobile hosts will be
   simultaneously mobile and multi-homed, i.e., have multiple mobile
   interfaces.  Furthermore, if the interfaces use different access
   technologies, it is fairly likely that one of the interfaces may
   appear stable (retain its current IP address) while some other(s) may
   experience mobility (undergo IP address change).

   The use of LOCATOR plus NES should be flexible enough to handle most
   such scenarios, although more complicated scenarios have not been
   studied so far.

6.6  Using LOCATORs across addressing realms

   It is possible for HIP associations to migrate to a state in which
   both parties are only using locators in different addressing realms.
   For example, the two hosts may initiate the HIP association when both
   are using IPv6 locators, then one host may loose its IPv6
   connectivity and obtain an IPv4 address.  In such a case, some type
   of mechanism for interworking between the different realms must be
   employed; such techniques are outside the scope of the present text.
   If no mechanism exists, then the UPDATE message carrying the new
   LOCATOR will likely not be acknowledged anyway, and the HIP state may
   time out.

6.7  Network renumbering

   It is expected that IPv6 networks will be renumbered much more often
   than most IPv4 networks are.  From an end-host point of view, network
   renumbering is similar to mobility.

6.8  Initiating the protocol in R1 or I2

   A Responder host MAY include one or more LOCATOR parameters in the R1
   packet that it sends to the Initiator.  These parameters MUST be
   protected by the R1 signature.  If the R1 packet contains LOCATOR
   parameters, the Initiator SHOULD send the I2 packet to the new



Nikander, et al.        Expires August 21, 2005                [Page 20]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


   preferred locator.  The I1 destination address and the new preferred
   locator may be identical.

            Initiator                                Responder

                              R1 with LOCATOR
                  <-----------------------------------
   record additional addresses
   change responder address
                     I2 with new SPI in SPI parameter
                  ----------------------------------->
                                                     (process normally)
                                  R2
                  <-----------------------------------
   (process normally)

                   Figure 10: LOCATOR inclusion in R1

   An Initiator MAY include one or more LOCATOR parameters in the I2
   packet, independent on whether there was LOCATOR parameter(s) in the
   R1 or not.  These parameters MUST be protected by the I2 signature.
   Even if the I2 packet contains LOCATOR parameters, the Responder MUST
   still send the R2 packet to the source address of the I2.  The new
   preferred locator SHOULD be identical to the I2 source address.

            Initiator                                Responder

                             I2 with LOCATOR
                  ----------------------------------->
                                                     (process normally)
                                                     record additional addresses
                       R2 with new SPI in SPI parameter
                  <-----------------------------------
   (process normally)
                           data on new SA
                  ------------------------------------>
                                                      (process normally)

                   Figure 11: LOCATOR inclusion in I2












Nikander, et al.        Expires August 21, 2005                [Page 21]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


7.  Processing rules

7.1  Sending LOCATORs

   The decision of when to send LOCATORs is basically a local policy
   issue.  However, it is RECOMMENDED that a host sends a LOCATOR
   whenever it recognizes a change of its IP addresses, and assumes that
   the change is going to last at least for a few seconds.  Rapidly
   sending conflicting LOCATORs SHOULD be avoided.

   When a host decides to inform its peers about changes in its IP
   addresses, it has to decide how to group the various addresses, and
   whether to include any addresses on multiple SPIs.  Since each SPI is
   associated with a different Security Association, the grouping policy
   may be based on ESP anti-replay protection considerations.  In the
   typical case, simply basing the grouping on actual kernel level
   physical and logical interfaces is often the best policy.  Virtual
   interfaces, such as IPsec tunnel interfaces or Mobile IP home
   addresses SHOULD NOT be announced.

   Note that the purpose of announcing IP addresses in a LOCATOR is to
   provide connectivity between the communicating hosts.  In most cases,
   tunnels (and therefore virtual interfaces) provide sub-optimal
   connectivity.  Furthermore, it should be possible to replace most
   tunnels with HIP based "non-tunneling", therefore making most virtual
   interfaces fairly unnecessary in the future.  On the other hand,
   there are clearly situations where tunnels are used for diagnostic
   and/or testing purposes.  In such and other similar cases announcing
   the IP addresses of virtual interfaces may be appropriate.

   Once the host has decided on the groups and assignment of addresses
   to the SPIs, it creates a LOCATOR parameter for each group.  If there
   are multiple LOCATOR parameters, the parameters MUST be ordered so
   that the new preferred locator is in the first LOCATOR parameter.
   Only one locator (the first one, if at all) may be indicated as
   preferred for each distinct Traffic Type in the LOCATOR parameter.

   If addresses are being added to an existing SPI, the LOCATOR
   parameter includes the full set of valid addresses for that SPI, each
   using a Locator Type of "1" and each with the same value for SPI.
   Any locators previously ACTIVE on that SPI that are not included in
   the LOCATOR will be set to DEPRECATED by the receiver.

   If a mobile host decides to change the SPI upon a readdress, it sends
   a LOCATOR with the SPI field within the LOCATOR set to the new SPI,
   and also a NES parameter with the Old SPI field set to the previous
   SPI and the New SPI field set to the new SPI.  If multiple LOCATOR
   and NES parameters are included, the NES MUST be ordered such that



Nikander, et al.        Expires August 21, 2005                [Page 22]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


   they appear in the same order as the set of corresponding LOCATORs.
   The decision as to whether to rekey and send a new Diffie-Hellman
   parameter while performing readdressing is a local policy decision.

   If new addresses and new SPIs are being created, the LOCATOR
   parameter's SPI field contains the new SPI, and the NES parameter's
   Old SPI field and New SPI fields are both set to the new SPI,
   indicating that this is a new and not a replacement SPI.

   If there are multiple LOCATOR parameters leading to a packet size
   that exceeds the MTU, the host SHOULD send multiple packets, each
   smaller than the MTU.  In the case of R1 and I2, the additional
   packets should be UPDATE packets that are sent after the base
   exchange has been completed.

7.2  Handling received LOCATORs

   A host SHOULD be prepared to receive LOCATOR parameters in any HIP
   packets, excluding I1.

   When a host receives a LOCATOR parameter, it first performs the
   following operations:
   1.  For each locator listed in the LOCATOR parameter, check that the
       address therein is a legal unicast or anycast address.  That is,
       the address MUST NOT be a broadcast or multicast address.  Note
       that some implementations MAY accept addresses that indicate the
       local host, since it may be allowed that the host runs HIP with
       itself.
   2.  For each address listed in the LOCATOR parameter, check if the
       address is already bound to the SPI.  If the address is already
       bound, its lifetime is updated.  If the status of the address is
       DEPRECATED, the status is changed to UNVERIFIED.  If the address
       is not already bound, the address is added, and its status is set
       to UNVERIFIED.  Mark all addresses on the SPI that were NOT
       listed in the LOCATOR parameter as DEPRECATED.  As a result, the
       SPI now contains any addresses listed in the LOCATOR parameter
       either as UNVERIFIED or ACTIVE, and any old addresses not listed
       in the LOCATOR parameter as DEPRECATED.
   3.  If the LOCATOR is paired with a NES parameter, the NES parameter
       is processed.  If the LOCATOR is replacing the address on an
       existing SPI, the SPI itself may be changed-- in this case, the
       host proceeds according to HIP rekeying procedures.  This case is
       indicated by the NES parameter including an existing SPI in the
       Old SPI field and a new SPI in the New SPI field, and the SPI
       field in the LOCATOR matching the New SPI in the NES.  If instead
       the LOCATOR corresponds to a new SPI, the NES will include the
       same SPI in both its Old SPI and New SPI fields.




Nikander, et al.        Expires August 21, 2005                [Page 23]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


   4.  Mark all locators at the address group that were NOT listed in
       the LOCATOR parameter as DEPRECATED.

   Once the host has updated the SPI, if the LOCATOR parameter contains
   a new preferred locator, the host SHOULD initiate a change of the
   preferred locator.  This usually requires that the host first
   verifies reachability of the associated address, and only then
   changes the preferred locator.  See Section 7.4.

7.3  Verifying address reachability

   A host MAY want to verify the reachability of any UNVERIFIED address
   at any time.  It typically does so by sending a nonce to the new
   address.  For example, if the host is changing its SPI and is sending
   a NES to the peer, the new SPI value SHOULD be random and the value
   MAY be copied into an ECHO_REQUEST sent in the rekeying UPDATE.  If
   the host is not rekeying, it MAY still use the ECHO_REQUEST parameter
   in an UPDATE message sent to the new address.  A host MAY also use
   other message exchanges as confirmation of the address reachability.
   Note that in the case of receiving a LOCATOR on an R1 and replying
   with an I2, receiving the corresponding R2 is sufficient for marking
   the Responder's primary address active.

   In some cases, it may be sufficient to use the arrival of data on a
   newly advertised SA as implicit address reachability verification,
   instead of waiting for the confirmation via a HIP packet (e.g.,
   Figure 12).  In this case, a host advertising a new SPI as part of
   its address reachability check SHOULD be prepared to receive traffic
   on the new SA.  Marking the address active as a part of receiving
   data on the SA is an idempotent operation, and does not cause any
   harm.

     Mobile host                                   Peer host

                                                   prepare incoming SA
                      new SPI in R2, or UPDATE
                <-----------------------------------
   switch to new outgoing SA
                           data on new SA
                ----------------------------------->
                                                   mark address ACTIVE

            Figure 12: Address activation via use of new SA


7.4  Changing the preferred locator

   A host MAY want to change the preferred outgoing locator for



Nikander, et al.        Expires August 21, 2005                [Page 24]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


   different reasons, e.g., because traffic information or ICMP error
   messages indicate that the currently used preferred address may have
   become unreachable.  Another reason is receiving a LOCATOR parameter
   that has the P-bit set.

   To change the preferred locator, the host initiates the following
   procedure:
   1.  If the new preferred locator has ACTIVE status, the preferred
       locator is changed and the procedure succeeds.
   2.  If the new preferred locator has UNVERIFIED status, the host
       starts to verify its reachability.  Once the verification has
       succeeded, the preferred locator change is completed, unless a
       new change has been initiated in the meantime.
   3.  If the peer host has not indicated a preference for any address,
       then the host picks one of the peer's ACTIVE addresses randomly
       or according to policy.  This case may arise if, for example,
       ICMP error messages arrive that deprecate the preferred locator,
       but the peer has not yet indicated a new preferred locator.
   4.  If the new preferred locator has DEPRECATED status and there is
       at least one non-deprecated address, the host selects one of the
       non-deprecated addresses as a new preferred locator and
       continues.





























Nikander, et al.        Expires August 21, 2005                [Page 25]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


8.  Policy considerations

   XXX: This section needs to be written.

   The host may change the status of unused ACTIVE addresses into
   UNVERIFIED after a locally configured period of inactivity.













































Nikander, et al.        Expires August 21, 2005                [Page 26]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


9.  Security Considerations

   Text contribution expected from Greg Perkins
















































Nikander, et al.        Expires August 21, 2005                [Page 27]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


10.  IANA Considerations


















































Nikander, et al.        Expires August 21, 2005                [Page 28]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


11.  Acknowledgments


















































Nikander, et al.        Expires August 21, 2005                [Page 29]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


12.  References

12.1  Normative references

   [1]  Moskowitz, R., "Host Identity Protocol", draft-ietf-hip-base-01
        (work in progress), October 2004.

   [2]  Kent, S. and R. Atkinson, "IP Encapsulating Security Payload
        (ESP)", RFC 2406, November 1998.

   [3]  Moskowitz, R., "Host Identity Protocol Architecture",
        draft-ietf-hip-arch-02 (work in progress), January 2005.

   [4]  Bradner, S., "Key words for use in RFCs to Indicate Requirement
        Levels", BCP 14, RFC 2119, March 1997.

   [5]  Hinden, R. and S. Deering, "IP Version 6 Addressing
        Architecture", RFC 2373, July 1998.

   [6]  Jokela, P., "Host Identity Protocol", draft-ietf-hip-esp-00
        (work in progress), February 2005.

12.2  Informative references

   [7]  Bellovin, S., "EIDs, IPsec, and HostNAT", IETF 41th, March 1998.

   [8]  Rescorla, E. and B. Korver, "Guidelines for Writing RFC Text on
        Security Considerations", draft-iab-sec-cons-00 (work in
        progress), August 2002.

   [9]  Nikander, P., "Mobile IP version 6 Route Optimization Security
        Design Background", draft-nikander-mobileip-v6-ro-sec-02 (work
        in progress), December 2003.


Authors' Addresses

   Pekka Nikander
   Ericsson Research Nomadic Lab
   JORVAS  FIN-02420
   FINLAND

   Phone: +358 9 299 1
   EMail: pekka.nikander@nomadiclab.com







Nikander, et al.        Expires August 21, 2005                [Page 30]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


   Jari Arkko
   Ericsson Research Nomadic Lab
   JORVAS  FIN-02420
   FINLAND

   Phone: +358 9 299 1
   EMail: jari.arkko@nomadiclab.com


   Tom Henderson
   The Boeing Company
   P.O. Box 3707
   Seattle, WA
   USA

   EMail: thomas.r.henderson@boeing.com



































Nikander, et al.        Expires August 21, 2005                [Page 31]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


Appendix A.  Changes from previous versions

A.1  From nikander-hip-mm-00 to nikander-hip-mm-01

   The actual protocol has been largely revised, based on the new
   symmetric New SPI (NES) design adopted in the base protocol draft
   version -08.  There are no more separate REA, AC or ACR packets, but
   their functionality has been folded into the NES packet.  At the same
   time, it has become possible to send REA parameters in R1 and I2.

   The Forwarding Agent functionality was removed, since it looks like
   that it will be moved to the proposed HIP Research Group.  Hence,
   there will be two other documents related to that, a simple
   Rendezvous server document (WG item) and a Forwarding Agent document
   (RG item).

A.2  From nikander-hip-mm-01 to nikander-hip-mm-02

   Alignment with base-00 draft (use of UPDATE and NOTIFY packets).

   The "logical interface" concept was dropped, and the SA/SPI was
   identified as the protocol component to which a HIP association binds
   addresses to.

   The RR was (again) made recommended, not mandatory, able to be
   administratively overridden.

A.3  From -02 to draft-ietf-hip-mm-00

   REA parameter type value is now "3" (was TBD before).

   Recommend that in multihoming situations, that inbound/outbound SAs
   are paired to avoid ambiguity when rekeying them.

   Clarified that multihoming scenario for now was intended for failover
   instead of load-balancing, due to transport layer issues.

   Clarified that if HIP negotiates base exchange using link local
   addresses, that a host SHOULD provide its peer with a globally
   reachable address.

   Clarified whether REAs sent for existing SPIs update the full set of
   addresses associated with that SPI, or only perform an incremental
   (additive) update.  REAs for an existing SPI should list all current
   addresses for that SPI, and any addresses previously in use on the
   SPI but not in the new REA parameter should be DEPRECATED.

   Clarified that address verification pertains to *outgoing* addresses.



Nikander, et al.        Expires August 21, 2005                [Page 32]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


   When discussing inclusion of REA in I2, the draft stated "The
   Responder MUST make sure that the puzzle solution is valid BOTH for
   the initial IP destination address used for I1 and for the new
   preferred address."  However, this statement conflicted with Appendix
   D of the base specification, so it has been removed for now.

A.4  From draft-ietf-hip-mm-00 to -01

   Introduction section reorganized.  Some of the scope of the document
   relating to multihoming was reduced.

   Removed empty appendix "Implementation experiences"

   Renamed REA parameter to LOCATOR and aligned to the discussion on
   redefining this parameter that occurred on the RG mailing list.

   Aligned with decoupling of ESP from base spec.


































Nikander, et al.        Expires August 21, 2005                [Page 33]

Internet-Draft       HIP Mobility and Multi-Homing         February 2005


Intellectual Property Statement

   The IETF takes no position regarding the validity or scope of any
   Intellectual Property Rights or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; nor does it represent that it has
   made any independent effort to identify any such rights.  Information
   on the procedures with respect to rights in RFC documents can be
   found in BCP 78 and BCP 79.

   Copies of IPR disclosures made to the IETF Secretariat and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use of
   such proprietary rights by implementers or users of this
   specification can be obtained from the IETF on-line IPR repository at
   http://www.ietf.org/ipr.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights that may cover technology that may be required to implement
   this standard.  Please address the information to the IETF at
   ietf-ipr@ietf.org.


Disclaimer of Validity

   This document and the information contained herein are provided on an
   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS
   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET
   ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,
   INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
   INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Copyright Statement

   Copyright (C) The Internet Society (2005).  This document is subject
   to the rights, licenses and restrictions contained in BCP 78, and
   except as set forth therein, the authors retain all their rights.


Acknowledgment

   Funding for the RFC Editor function is currently provided by the
   Internet Society.




Nikander, et al.        Expires August 21, 2005                [Page 34]



